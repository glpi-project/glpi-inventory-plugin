# GitHub Actions docs
# https://help.github.com/en/articles/about-github-actions
# https://help.github.com/en/articles/workflow-syntax-for-github-actions
name: CI

on: [push, pull_request]

jobs:

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['7.4', '8.0']
    name: lint (${{ matrix.php-versions }})
    env:
      extensions: zip
      key: cache-v1
    steps:
    - uses: actions/checkout@v1
    - name: Setup cache environment
      id: extcache
      uses: shivammathur/cache-extensions@v1
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: ${{ env.extensions }}
        key: ${{ env.key }}

    - name: Cache extensions
      uses: actions/cache@v2
      with:
        path: ${{ steps.extcache.outputs.dir }}
        key: ${{ steps.extcache.outputs.key }}
        restore-keys: ${{ steps.extcache.outputs.key }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: ${{ env.extensions }}

    - name: Cache Composer dependencies
      uses: actions/cache@v2
      with:
        path: /tmp/composer-cache
        key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
    - uses: php-actions/composer@v5
      with:
        php_version: 7.4
    - name: Lint
      run: php vendor/bin/robo --no-interaction code:cs

  phpunit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['7.4', '8.0']
    name: phpunit (${{ matrix.php-versions }})
    env:
      extensions: zip, hash, fileinfo, mysqli, gd, bz2, xdebug
      key: cache-v1
    steps:
    - name: Install gettext
      run: sudo apt-get install --assume-yes --no-install-recommends --quiet gettext
    - uses: ankane/setup-mariadb@v1
      with:
        mariadb-version: 10.5
    - uses: actions/checkout@v1
    - name: Setup cache environment
      id: extcache
      uses: shivammathur/cache-extensions@v1
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: ${{ env.extensions }}
        key: ${{ env.key }}

    - name: Cache extensions
      uses: actions/cache@v2
      with:
        path: ${{ steps.extcache.outputs.dir }}
        key: ${{ steps.extcache.outputs.key }}
        restore-keys: ${{ steps.extcache.outputs.key }}

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: ${{ env.extensions }}

    - name: Cache Composer dependencies
      uses: actions/cache@v2
      with:
        path: /tmp/composer-cache
        key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
    - uses: php-actions/composer@v5
      with:
        php_version: 7.4
    - name: Checkout GLPI
      uses: actions/checkout@v2
      with:
        repository: glpi-project/glpi
        path: glpi
        fetch-depth: 1
        ref: master
    - name: Copy plugin
      run: rsync -avr --exclude='glpi' ./* glpi/plugins/glpiinventory/
    - name: Create the database
      run: mysqladmin create glpi
    - name: Install dependencies
      run: |
        cd glpi
        php bin/console dependencies install
        php bin/console locales:compile
    - name: Install GLPI
      run: cd glpi && php bin/console glpi:database:install -n --config-dir=tests/config --db-name=glpi --db-user=root
    - name: Install plugin
      run: cd glpi && php bin/console glpi:plugin:install -vvv -n --config-dir=tests/config --username=glpi glpiinventory
    - name: Activate plugin
      run: cd glpi && php bin/console glpi:plugin:activate -n --config-dir=tests/config glpiinventory
    - name: run tests
      run: cd glpi/plugins/glpiinventory/ && php vendor/bin/phpunit tests/
